{"version":3,"sources":["NavMenu.js","component/home.js","component/service.js","component/contact.js","component/entrepreneur.js","component/student.js","component/hobbyists.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["NavMenu","props","handleMouseHover","setState","toggleHoverState","state","isHovering","className","activeClassName","exact","to","onMouseEnter","this","onMouseLeave","Component","Home","Services","Contact","Entrepreneur","Students","Hobbies","Routes","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oSAqCeA,E,YA/BX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAKVC,iBAAmB,WAAQ,EAAKC,SAAS,EAAKC,mBAN5B,EAOlBA,iBAAmB,SAACC,GAAW,MAAO,CAACC,YAAaD,EAAMC,aALtD,EAAKD,MAAM,CACPC,YAAY,GAHF,E,sEAUd,OACI,wBAAIC,UAAU,aACV,4BAAI,kBAAC,IAAD,CAASC,gBAAgB,SAASC,OAAK,EAACC,GAAG,KAA3C,SACJ,wBAAIC,aAAcC,KAAKV,iBACnBW,aAAcD,KAAKV,kBACtB,kBAAC,IAAD,CAASM,gBAAgB,SAASE,GAAG,aAArC,YACuCE,KAAKP,MAAMC,YACP,yBAAKC,UAAU,YACf,kBAAC,IAAD,CAASC,gBAAgB,SAASE,GAAG,0BAArC,gBACI,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,sBAArC,YACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,qBAArC,eAKhD,4BAAI,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,YAArC,iB,GA1BEI,aCSPC,MAXf,WACI,OACI,6BACI,yBAAMR,UAAU,OAChB,kBAAC,EAAD,OAEA,2CCSGS,MAff,WACI,OACA,6BACI,yBAAMT,UAAU,OAChB,kBAAC,EAAD,OAEA,+CCKOU,MAXf,WACI,OACI,6BACI,yBAAMV,UAAU,OAChB,kBAAC,EAAD,OAEA,8CCKGW,MAXf,WACI,OACI,6BACI,yBAAMX,UAAU,OACZ,kBAAC,EAAD,OAEJ,sDCQGY,MAbf,WACI,OACI,6BACI,yBAAKZ,UAAU,OACX,kBAAC,EAAD,OAGJ,kDCIGa,MAXf,WACI,OACI,6BACI,yBAAKb,UAAU,OACf,kBAAC,EAAD,OAEA,iDCcGc,E,iLAbP,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOZ,OAAK,EAACD,gBAAgB,YAAYc,KAAK,IAAIC,UAAWR,IAC7D,kBAAC,IAAD,CAAON,OAAK,EAACa,KAAK,YAAYC,UAAWP,IACzC,kBAAC,IAAD,CAAOM,KAAK,WAAWC,UAAWN,IAClC,kBAAC,IAAD,CAAOK,KAAK,yBAAyBC,UAAWL,IAChD,kBAAC,IAAD,CAAOI,KAAK,qBAAqBC,UAAWJ,IAC5C,kBAAC,IAAD,CAAOG,KAAK,oBAAoBC,UAAWH,S,GATtCN,aCMNU,MAVf,WACE,OACE,yBAAKjB,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,SCGYkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OAEJ,kBAAC,EAAD,MAASC,SAASC,eAAe,SDuHhC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.b9948124.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { NavLink} from 'react-router-dom';\r\nimport './App.css';\r\n\r\n\r\nclass NavMenu extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isHovering: false\r\n        }\r\n    }\r\n    handleMouseHover = () => { this.setState(this.toggleHoverState) }\r\n    toggleHoverState = (state) => {return {isHovering: !state.isHovering }}\r\n\r\n    render(){\r\n        return (\r\n            <ul className=\"menu-list\">\r\n                <li><NavLink activeClassName=\"active\" exact to=\"/\">Home</NavLink></li>\r\n                <li onMouseEnter={this.handleMouseHover}\r\n                    onMouseLeave={this.handleMouseHover}\r\n                ><NavLink activeClassName=\"active\" to=\"/services\">Services</NavLink>{\r\n                                                        this.state.isHovering && (\r\n                                                            <div className=\"sub-menu\">\r\n                                                            <NavLink activeClassName=\"active\" to=\"/services/entrepreneur\">Entrepreneur</NavLink>\r\n                                                                <NavLink activeClassName=\"active\" to=\"/services/students\">Students</NavLink>\r\n                                                                <NavLink activeClassName=\"active\" to=\"/services/hobbies\">Hobbyists</NavLink>\r\n                                                            </div>\r\n                                                            )\r\n                                                        \r\n                                                        }</li>\r\n                <li><NavLink activeClassName=\"active\" to=\"/contact\">Contact</NavLink></li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport NavMenu from '../NavMenu';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <div  className=\"App\">\r\n            <NavMenu/>\r\n            </div>\r\n            <h1>HOME PAGE</h1>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport NavMenu from '../NavMenu';\r\n\r\nfunction Services() {\r\n    return(\r\n    <div>\r\n        <div  className=\"App\">\r\n        <NavMenu/>\r\n        </div>\r\n        <h1>SERVICES PAGE</h1>\r\n        \r\n        \r\n        \r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Services;","import React from 'react';\r\nimport NavMenu from '../NavMenu';\r\n\r\nfunction Contact() {\r\n    return (\r\n        <div>\r\n            <div  className=\"App\">\r\n            <NavMenu/>\r\n            </div>\r\n            <h1>CONTACT PAGE</h1>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport NavMenu from '../NavMenu';\r\n\r\nfunction Entrepreneur(){\r\n    return(\r\n        <div>\r\n            <div  className=\"App\">\r\n                <NavMenu/>\r\n            </div>\r\n            <h1>Entrepreneur content</h1>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Entrepreneur;","import React from 'react';\r\nimport NavMenu from '../NavMenu';\r\n\r\n\r\nfunction Students(){\r\n    return(\r\n        <div>\r\n            <div className=\"App\">\r\n                <NavMenu/>\r\n            </div>\r\n            \r\n            <h1>Students content</h1>\r\n        </div>\r\n        \r\n        )\r\n}\r\n\r\nexport default Students;","import React from 'react';\r\nimport NavMenu from '../NavMenu';\r\n\r\n\r\nfunction Hobbies(){\r\n    return(\r\n        <div>\r\n            <div className=\"App\">\r\n            <NavMenu/>\r\n            </div>\r\n            <h1>Hobbies content</h1>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Hobbies;","import React, { Component } from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport Home from \"./component/home\";\r\nimport Services from \"./component/service\";\r\nimport Contact from \"./component/contact\";\r\nimport Entrepreneur from './component/entrepreneur';\r\nimport Students from './component/student';\r\nimport Hobbies from './component/hobbyists';\r\n\r\nclass Routes extends Component {\r\n    render() { \r\n        return(\r\n            <BrowserRouter>\r\n                <Route exact activeClassName='is-active' path='/' component={Home}/>\r\n                <Route exact path='/services' component={Services}/>\r\n                <Route path='/contact' component={Contact}/>\r\n                <Route path='/services/entrepreneur' component={Entrepreneur}/>\r\n                <Route path='/services/students' component={Students}/>\r\n                <Route path='/services/hobbies' component={Hobbies}/>\r\n            </BrowserRouter>\r\n        )\r\n}\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport Routes from './Router';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Routes/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n   \n     <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}